(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))c(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const g of i.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&c(g)}).observe(document,{childList:!0,subtree:!0});function n(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function c(t){if(t.ep)return;t.ep=!0;const i=n(t);fetch(t.href,i)}})();const f=document.querySelector(":root"),d=new URLSearchParams(location.search),m=Number(d.get("step"))||3,p=d.get("bg")??"000";f.style.setProperty("--bg",`#${p}`);const s=document.querySelector("#app"),r=document.createElement("canvas"),o=r.getContext("2d"),e={hue:0,stepX:m,stepY:m,directionX:"left",directionY:"down",height:s.clientHeight,width:s.clientWidth,image:new Image,imageX:0,imageY:0};e.height=s.clientHeight;e.width=s.clientWidth;r.height=e.height;r.width=e.width;s.appendChild(r);function u(){o.globalCompositeOperation="source-over",o.fillRect(0,0,e.width,e.height),o.globalCompositeOperation="source-over",o.fillStyle=`hsla(${e.hue}, 50%, 45%, 1)`,o.fillRect(0,0,e.width,e.height),o.globalCompositeOperation="destination-in",o.drawImage(e.image,e.imageX,e.imageY,e.image.width,e.image.height),w(),X(),requestAnimationFrame(()=>u())}function w(){e.directionX=="left"?e.imageX>=e.width-e.image.width?(e.directionX="right",e.imageX=e.imageX-e.stepX):e.imageX=e.imageX+e.stepX:e.imageX<=0?(e.directionX="left",e.imageX=e.imageX+e.stepX):e.imageX=e.imageX-e.stepX,e.directionY=="down"?e.imageY>=e.height-e.image.height?(e.directionY="up",e.imageY=e.imageY-e.stepY):e.imageY=e.imageY+e.stepY:e.imageY<=0?(e.directionY="down",e.imageY=e.imageY+e.stepY):e.imageY=e.imageY-e.stepY}function X(){e.hue=(e.hue+.5)%360}function l(){e.width=r.width=window.innerWidth,e.height=r.height=window.innerHeight}async function Y(){new Promise((h,a)=>{const n=new Image;n.src=d.get("image")||"./dvd.png",n.onload=()=>{e.imageX=Math.floor(Math.random()*(e.width-e.image.width)),e.imageY=Math.floor(Math.random()*(e.height-e.image.height)),h()},n.onerror=c=>{a(c)},e.image=n})}Y().then(()=>{window.addEventListener("resize",()=>l()),l(),u()}).catch(console.log);
